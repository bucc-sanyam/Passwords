{"ast":null,"code":"var _jsxFileName = \"/home/sanyam/PycharmProjects/Personal/Passwords/frontend/src/components/websites/WebsiteList.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchWebsites } from \"../../actions\";\n\nclass WebsiteList extends React.Component {\n  componentDidMount() {\n    this.props.fetchWebsites();\n  }\n\n  renderAdminButtons(website) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right floated content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/websites/edit/${website.name}`,\n      className: \"ui button primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(Link, {\n      to: `/websites/delete/${website.name}`,\n      className: \"ui button negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, \"Delete\"));\n  }\n\n  renderList() {\n    return this.props.websites && this.props.websites.map(website => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        key: website.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, this.renderAdminButtons(website), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `websites/${website.id}`,\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, website.title), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, website.description)));\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/websites/new\",\n        className: \"ui button primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, \"Create Website\"));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"Websites\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, this.renderList()), this.renderCreate()), \"WebsiteList\", /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/passwords/new\",\n        aboutProps: {\n          website: \"One\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Click me\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  if (state && state.websites) {\n    return {\n      websites: Object.values(state.websites),\n      currentUserId: state.auth.userId,\n      isSignedIn: state.auth.isSignedIn\n    };\n  } else {\n    return {\n      websites: \"\",\n      currentUserId: \"\",\n      isSignedIn: \"\"\n    };\n  }\n};\n\nexport default connect(mapStateToProps, {\n  fetchWebsites\n})(WebsiteList);","map":{"version":3,"sources":["/home/sanyam/PycharmProjects/Personal/Passwords/frontend/src/components/websites/WebsiteList.js"],"names":["React","Link","connect","fetchWebsites","WebsiteList","Component","componentDidMount","props","renderAdminButtons","website","name","renderList","websites","map","id","title","description","renderCreate","isSignedIn","textAlign","render","pathname","aboutProps","mapStateToProps","state","Object","values","currentUserId","auth","userId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchWebsites } from \"../../actions\";\n\nclass WebsiteList extends React.Component {\n  componentDidMount() {\n    this.props.fetchWebsites();\n  }\n  renderAdminButtons(website) {\n    return (\n      <div className=\"right floated content\">\n        <Link\n          to={`/websites/edit/${website.name}`}\n          className=\"ui button primary\"\n        >\n          Edit\n        </Link>\n        <Link\n          to={`/websites/delete/${website.name}`}\n          className=\"ui button negative\"\n        >\n          Delete\n        </Link>\n      </div>\n    );\n  }\n\n  renderList() {\n    return (\n      this.props.websites &&\n      this.props.websites.map((website) => {\n        return (\n          <div className=\"item\" key={website.id}>\n            {this.renderAdminButtons(website)}\n            <i className=\"large middle aligned icon camera\" />\n            <div className=\"content\">\n              <Link to={`websites/${website.id}`} className=\"header\">\n                {website.title}\n              </Link>\n              <div className=\"description\">{website.description}</div>\n            </div>\n          </div>\n        );\n      })\n    );\n  }\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return (\n        <div style={{ textAlign: \"right\" }}>\n          <Link to=\"/websites/new\" className=\"ui button primary\">\n            Create Website\n          </Link>\n        </div>\n      );\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div>\n          <h2>Websites</h2>\n          <div className=\"ui celled list\">{this.renderList()}</div>\n          {this.renderCreate()}\n        </div>\n        WebsiteList\n        <Link\n          to={{ pathname: \"/passwords/new\", aboutProps: { website: \"One\" } }}\n        >\n          Click me\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  if (state && state.websites) {\n    return {\n      websites: Object.values(state.websites),\n      currentUserId: state.auth.userId,\n      isSignedIn: state.auth.isSignedIn,\n    };\n  } else {\n    return { websites: \"\", currentUserId: \"\", isSignedIn: \"\" };\n  }\n};\n\nexport default connect(mapStateToProps, { fetchWebsites })(WebsiteList);\n"]},"metadata":{},"sourceType":"module"}