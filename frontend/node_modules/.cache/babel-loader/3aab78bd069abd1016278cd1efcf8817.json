{"ast":null,"code":"import { axiosInstance } from \"../../network\";\nimport { APIMethods } from \"../../constants\";\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst asyncValidate = (values\n/*, dispatch */\n) => {\n  return sleep(1000).then(async () => {\n    const website = values.website;\n    const response = await axiosInstance.get(\"websites/\", {\n      method: APIMethods.GET,\n      params: {\n        website\n      }\n    });\n    console.log(\"Response received is : \", response);\n\n    if (response.includes(values.email)) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        email: \"Website already Exists\"\n      };\n    }\n  });\n};\n\nexport default asyncValidate;","map":{"version":3,"sources":["/home/sanyam/PycharmProjects/Personal/Passwords/frontend/src/components/websites/asyncValidate.js"],"names":["axiosInstance","APIMethods","sleep","ms","Promise","resolve","setTimeout","asyncValidate","values","then","website","response","get","method","GET","params","console","log","includes","email"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,MAAMC,KAAK,GAAIC,EAAD,IAAQ,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAnC,CAAtB;;AAEA,MAAMI,aAAa,GAAG,CAACC;AAAO;AAAR,KAA4B;AAChD,SAAON,KAAK,CAAC,IAAD,CAAL,CAAYO,IAAZ,CAAiB,YAAY;AAClC,UAAMC,OAAO,GAAGF,MAAM,CAACE,OAAvB;AACA,UAAMC,QAAQ,GAAG,MAAMX,aAAa,CAACY,GAAd,CAAkB,WAAlB,EAA+B;AACpDC,MAAAA,MAAM,EAAEZ,UAAU,CAACa,GADiC;AAEpDC,MAAAA,MAAM,EAAE;AAAEL,QAAAA;AAAF;AAF4C,KAA/B,CAAvB;AAIAM,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCN,QAAvC;;AACA,QAAIA,QAAQ,CAACO,QAAT,CAAkBV,MAAM,CAACW,KAAzB,CAAJ,EAAqC;AACnC;AACA,YAAM;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAN;AACD;AACF,GAXM,CAAP;AAYD,CAbD;;AAeA,eAAeZ,aAAf","sourcesContent":["import { axiosInstance } from \"../../network\";\nimport { APIMethods } from \"../../constants\";\n\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst asyncValidate = (values /*, dispatch */) => {\n  return sleep(1000).then(async () => {\n    const website = values.website;\n    const response = await axiosInstance.get(\"websites/\", {\n      method: APIMethods.GET,\n      params: { website },\n    });\n    console.log(\"Response received is : \", response);\n    if (response.includes(values.email)) {\n      // eslint-disable-next-line no-throw-literal\n      throw { email: \"Website already Exists\" };\n    }\n  });\n};\n\nexport default asyncValidate;\n"]},"metadata":{},"sourceType":"module"}