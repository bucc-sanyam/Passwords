{"ast":null,"code":"var _jsxFileName = \"/home/sanyam/PycharmProjects/Personal/Passwords/frontend/src/components/passwords/PasswordForm.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport asyncValidate from \"./asyncValidate\";\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = [\"firstName\", \"lastName\", \"email\", \"password\", \"userName\", \"website\"];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = \"Required\";\n    }\n  });\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  return errors;\n};\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: {\n    touched,\n    invalid,\n    error\n  },\n  ...custom\n}) => /*#__PURE__*/React.createElement(TextField, Object.assign({\n  label: label,\n  placeholder: label,\n  error: touched && invalid,\n  helperText: touched && error\n}, input, custom, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }\n}));\n\nconst renderFromHelper = ({\n  touched,\n  error\n}) => {\n  if (!(touched && error)) {\n    return;\n  } else {\n    return /*#__PURE__*/React.createElement(FormHelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 12\n      }\n    }, touched && error);\n  }\n};\n\nconst PasswordForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting,\n    classes\n  } = props;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"firstName\",\n    component: renderTextField,\n    label: \"First Name\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"lastName\",\n    component: renderTextField,\n    label: \"Last Name\",\n    variant: \"outlined\",\n    style: {\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    component: renderTextField,\n    label: \"Email\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"website\",\n    component: renderTextField,\n    label: \"Website\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"userName\",\n    component: renderTextField,\n    label: \"User Name\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"password\",\n    component: renderTextField,\n    label: \"Password\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"phoneNumber\",\n    component: renderTextField,\n    label: \"Phone Number\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"notes\",\n    component: renderTextField,\n    label: \"Extra Info\",\n    multiline: true,\n    rowsMax: \"4\",\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: pristine || submitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Clear Values\")));\n};\n\nexport default reduxForm({\n  form: \"PasswordForm\",\n  // a unique identifier for this form\n  validate,\n  asyncValidate\n})(PasswordForm);","map":{"version":3,"sources":["/home/sanyam/PycharmProjects/Personal/Passwords/frontend/src/components/passwords/PasswordForm.js"],"names":["React","Field","reduxForm","TextField","Checkbox","FormControlLabel","FormControl","Select","InputLabel","FormHelperText","Radio","RadioGroup","asyncValidate","validate","values","errors","requiredFields","forEach","field","email","test","renderTextField","label","input","meta","touched","invalid","error","custom","renderFromHelper","PasswordForm","props","handleSubmit","pristine","reset","submitting","classes","marginLeft","form"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport asyncValidate from \"./asyncValidate\";\n\nconst validate = (values) => {\n  const errors = {};\n  const requiredFields = [\n    \"firstName\",\n    \"lastName\",\n    \"email\",\n    \"password\",\n    \"userName\",\n    \"website\",\n  ];\n  requiredFields.forEach((field) => {\n    if (!values[field]) {\n      errors[field] = \"Required\";\n    }\n  });\n  if (\n    values.email &&\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n  ) {\n    errors.email = \"Invalid email address\";\n  }\n  return errors;\n};\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n);\n\nconst renderFromHelper = ({ touched, error }) => {\n  if (!(touched && error)) {\n    return;\n  } else {\n    return <FormHelperText>{touched && error}</FormHelperText>;\n  }\n};\n\nconst PasswordForm = (props) => {\n  const { handleSubmit, pristine, reset, submitting, classes } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div style={{}}>\n        <Field\n          name=\"firstName\"\n          component={renderTextField}\n          label=\"First Name\"\n          variant=\"outlined\"\n        />\n        <Field\n          name=\"lastName\"\n          component={renderTextField}\n          label=\"Last Name\"\n          variant=\"outlined\"\n          style={{ marginLeft: \"10px\" }}\n        />\n      </div>\n      <div>\n        <Field\n          name=\"email\"\n          component={renderTextField}\n          label=\"Email\"\n          variant=\"outlined\"\n        />\n      </div>\n      <div>\n        <Field\n          name=\"website\"\n          component={renderTextField}\n          label=\"Website\"\n          variant=\"outlined\"\n        />\n      </div>\n      <div>\n        <Field\n          name=\"userName\"\n          component={renderTextField}\n          label=\"User Name\"\n          variant=\"outlined\"\n        />\n      </div>\n      <div>\n        <Field\n          name=\"password\"\n          component={renderTextField}\n          label=\"Password\"\n          variant=\"outlined\"\n        />\n      </div>\n      <div>\n        <Field\n          name=\"phoneNumber\"\n          component={renderTextField}\n          label=\"Phone Number\"\n          variant=\"outlined\"\n        />\n      </div>\n      <div />\n      <div>\n        <Field\n          name=\"notes\"\n          component={renderTextField}\n          label=\"Extra Info\"\n          multiline\n          rowsMax=\"4\"\n          margin=\"normal\"\n        />\n      </div>\n      <div>\n        <button type=\"submit\" disabled={pristine || submitting}>\n          Submit\n        </button>\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"PasswordForm\", // a unique identifier for this form\n  validate,\n  asyncValidate,\n})(PasswordForm);\n"]},"metadata":{},"sourceType":"module"}