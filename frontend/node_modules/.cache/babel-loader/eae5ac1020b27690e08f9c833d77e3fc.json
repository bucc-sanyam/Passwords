{"ast":null,"code":"var _jsxFileName = \"/home/sanyam/PycharmProjects/Personal/Passwords/frontend/src/components/passwords/PasswordForm.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport asyncValidate from \"./asyncValidate\";\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = [\"firstName\", \"lastName\", \"email\", \"password\"];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = \"Required\";\n    }\n  });\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  return errors;\n};\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: {\n    touched,\n    invalid,\n    error\n  },\n  ...custom\n}) => /*#__PURE__*/React.createElement(TextField, Object.assign({\n  label: label,\n  placeholder: label,\n  error: touched && invalid,\n  helperText: touched && error\n}, input, custom, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }\n}));\n\nconst renderCheckbox = ({\n  input,\n  label\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(FormControlLabel, {\n  control: /*#__PURE__*/React.createElement(Checkbox, {\n    checked: input.value ? true : false,\n    onChange: input.onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }),\n  label: label,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }\n}));\n\nconst radioButton = ({\n  input,\n  ...rest\n}) => /*#__PURE__*/React.createElement(FormControl, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(RadioGroup, Object.assign({}, input, rest, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(FormControlLabel, {\n  value: \"female\",\n  control: /*#__PURE__*/React.createElement(Radio, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 49\n    }\n  }),\n  label: \"Female\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(FormControlLabel, {\n  value: \"male\",\n  control: /*#__PURE__*/React.createElement(Radio, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 47\n    }\n  }),\n  label: \"Male\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(FormControlLabel, {\n  value: \"other\",\n  control: /*#__PURE__*/React.createElement(Radio, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 48\n    }\n  }),\n  label: \"Other\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }\n})));\n\nconst renderFromHelper = ({\n  touched,\n  error\n}) => {\n  if (!(touched && error)) {\n    return;\n  } else {\n    return /*#__PURE__*/React.createElement(FormHelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }\n    }, touched && error);\n  }\n};\n\nconst renderSelectField = ({\n  input,\n  label,\n  meta: {\n    touched,\n    error\n  },\n  children,\n  ...custom\n}) => /*#__PURE__*/React.createElement(FormControl, {\n  error: touched && error,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(InputLabel, {\n  htmlFor: \"age-native-simple\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }\n}, \"Age\"), /*#__PURE__*/React.createElement(Select, Object.assign({\n  native: true\n}, input, custom, {\n  inputProps: {\n    name: \"age\",\n    id: \"age-native-simple\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }\n}), children), renderFromHelper({\n  touched,\n  error\n}));\n\nconst PasswordForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting,\n    classes\n  } = props;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"firstName\",\n    component: renderTextField,\n    label: \"First Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"lastName\",\n    component: renderTextField,\n    label: \"Last Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    component: renderTextField,\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"website\",\n    component: renderTextField,\n    label: \"Website\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"userName\",\n    component: renderTextField,\n    label: \"User Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"password\",\n    component: renderTextField,\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"phoneNumber\",\n    component: renderTextField,\n    label: \"Phone Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"notes\",\n    component: renderTextField,\n    label: \"Extra Info\",\n    multiline: true,\n    rowsMax: \"4\",\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: pristine || submitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \"Clear Values\")));\n};\n\nexport default reduxForm({\n  form: \"PasswordForm\",\n  // a unique identifier for this form\n  validate,\n  asyncValidate\n})(PasswordForm);","map":{"version":3,"sources":["/home/sanyam/PycharmProjects/Personal/Passwords/frontend/src/components/passwords/PasswordForm.js"],"names":["React","Field","reduxForm","TextField","Checkbox","FormControlLabel","FormControl","Select","InputLabel","FormHelperText","Radio","RadioGroup","asyncValidate","validate","values","errors","requiredFields","forEach","field","email","test","renderTextField","label","input","meta","touched","invalid","error","custom","renderCheckbox","value","onChange","radioButton","rest","renderFromHelper","renderSelectField","children","name","id","PasswordForm","props","handleSubmit","pristine","reset","submitting","classes","form"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport asyncValidate from \"./asyncValidate\";\n\nconst validate = (values) => {\n  const errors = {};\n  const requiredFields = [\"firstName\", \"lastName\", \"email\", \"password\"];\n  requiredFields.forEach((field) => {\n    if (!values[field]) {\n      errors[field] = \"Required\";\n    }\n  });\n  if (\n    values.email &&\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n  ) {\n    errors.email = \"Invalid email address\";\n  }\n  return errors;\n};\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n);\n\nconst renderCheckbox = ({ input, label }) => (\n  <div>\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={input.value ? true : false}\n          onChange={input.onChange}\n        />\n      }\n      label={label}\n    />\n  </div>\n);\n\nconst radioButton = ({ input, ...rest }) => (\n  <FormControl>\n    <RadioGroup {...input} {...rest}>\n      <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n      <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n      <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n    </RadioGroup>\n  </FormControl>\n);\n\nconst renderFromHelper = ({ touched, error }) => {\n  if (!(touched && error)) {\n    return;\n  } else {\n    return <FormHelperText>{touched && error}</FormHelperText>;\n  }\n};\n\nconst renderSelectField = ({\n  input,\n  label,\n  meta: { touched, error },\n  children,\n  ...custom\n}) => (\n  <FormControl error={touched && error}>\n    <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\n    <Select\n      native\n      {...input}\n      {...custom}\n      inputProps={{\n        name: \"age\",\n        id: \"age-native-simple\",\n      }}\n    >\n      {children}\n    </Select>\n    {renderFromHelper({ touched, error })}\n  </FormControl>\n);\n\nconst PasswordForm = (props) => {\n  const { handleSubmit, pristine, reset, submitting, classes } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          name=\"firstName\"\n          component={renderTextField}\n          label=\"First Name\"\n        />\n      </div>\n      <div>\n        <Field name=\"lastName\" component={renderTextField} label=\"Last Name\" />\n      </div>\n      <div>\n        <Field name=\"email\" component={renderTextField} label=\"Email\" />\n      </div>\n      <div>\n        <Field name=\"website\" component={renderTextField} label=\"Website\" />\n      </div>\n      <div>\n        <Field name=\"userName\" component={renderTextField} label=\"User Name\" />\n      </div>\n      <div>\n        <Field name=\"password\" component={renderTextField} label=\"Password\" />\n      </div>\n      <div>\n        <Field\n          name=\"phoneNumber\"\n          component={renderTextField}\n          label=\"Phone Number\"\n        />\n      </div>\n      <div />\n      <div>\n        <Field\n          name=\"notes\"\n          component={renderTextField}\n          label=\"Extra Info\"\n          multiline\n          rowsMax=\"4\"\n          margin=\"normal\"\n        />\n      </div>\n      <div>\n        <button type=\"submit\" disabled={pristine || submitting}>\n          Submit\n        </button>\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"PasswordForm\", // a unique identifier for this form\n  validate,\n  asyncValidate,\n})(PasswordForm);\n"]},"metadata":{},"sourceType":"module"}