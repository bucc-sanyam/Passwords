{"ast":null,"code":"var _jsxFileName = \"/home/sanyam/PycharmProjects/Personal/Passwords/frontend/src/components/websites/WebsiteEdit.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchWebsite, editWebsite } from \"../../actions\";\nimport WebsiteForm from \"./WebsiteForm\";\nimport _ from \"lodash\";\n\nclass WebsiteEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.editWebsite(this.props.match.params.name, formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchWebsite(this.props.match.params.name);\n  }\n\n  render() {\n    if (!this.props.website) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"Edit Website \"), /*#__PURE__*/React.createElement(WebsiteForm, {\n      initialValues: _.pick(this.props.website, \"title\", \"description\"),\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    website: state.websites[ownProps.match.params.name]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchWebsite,\n  editWebsite\n})(WebsiteEdit);","map":{"version":3,"sources":["/home/sanyam/PycharmProjects/Personal/Passwords/frontend/src/components/websites/WebsiteEdit.js"],"names":["React","connect","fetchWebsite","editWebsite","WebsiteForm","_","WebsiteEdit","Component","onSubmit","formValues","props","match","params","name","componentDidMount","render","website","pick","mapStateToProps","state","ownProps","websites"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,eAA1C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SAKxCC,QALwC,GAK5BC,UAAD,IAAgB;AACzB,WAAKC,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,IAA/C,EAAqDJ,UAArD;AACD,KAPuC;AAAA;;AACxCK,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,KAAL,CAAWR,YAAX,CAAwB,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,IAAhD;AACD;;AAMDE,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKL,KAAL,CAAWM,OAAhB,EAAyB;AACvB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,WAAD;AACE,MAAA,aAAa,EAAEX,CAAC,CAACY,IAAF,CAAO,KAAKP,KAAL,CAAWM,OAAlB,EAA2B,OAA3B,EAAoC,aAApC,CADjB;AAEE,MAAA,QAAQ,EAAE,KAAKR,QAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AAtBuC;;AAyB1C,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEJ,IAAAA,OAAO,EAAEG,KAAK,CAACE,QAAN,CAAeD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,IAArC;AAAX,GAAP;AACD,CAFD;;AAIA,eAAeZ,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAlB,CAAP,CACbG,WADa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchWebsite, editWebsite } from \"../../actions\";\nimport WebsiteForm from \"./WebsiteForm\";\nimport _ from \"lodash\";\n\nclass WebsiteEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchWebsite(this.props.match.params.name);\n  }\n\n  onSubmit = (formValues) => {\n    this.props.editWebsite(this.props.match.params.name, formValues);\n  };\n\n  render() {\n    if (!this.props.website) {\n      return <div>Loading...</div>;\n    }\n    return (\n      <div>\n        <h3>Edit Website </h3>\n        <WebsiteForm\n          initialValues={_.pick(this.props.website, \"title\", \"description\")}\n          onSubmit={this.onSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { website: state.websites[ownProps.match.params.name] };\n};\n\nexport default connect(mapStateToProps, { fetchWebsite, editWebsite })(\n  WebsiteEdit\n);\n"]},"metadata":{},"sourceType":"module"}